<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converter="clr-namespace:InfiniteRechargeMetrics.Pages.Converters"
             xmlns:local="clr-namespace:InfiniteRechargeMetrics.SharedCustomViews"
             mc:Ignorable="d"
             x:Class="InfiniteRechargeMetrics.Templates.EditMatchRobotsTemplate">

    <ContentView.Resources>
        <ResourceDictionary>
            <converter:DetermineFrameVisibility x:Key="DetermineFrameVisibility"/>
            <converter:ImagePathConverter x:Key="ImagePathConverter"/>

            <Style x:Key="RobotFrame" TargetType="Frame" BasedOn="{StaticResource MarginedFrame}">
                <Setter Property="IsVisible" Value="False"/>
            </Style>

            <Style x:Key="RobotImageFrame" TargetType="Frame" BasedOn="{StaticResource FrameImageWrapper}">
                <Setter Property="IsClippedToBounds" Value="True"/>
                <Setter Property="HeightRequest" Value="80"/>
                <Setter Property="WidthRequest" Value="80"/>
                <Setter Property="Grid.RowSpan" Value="2"/>
            </Style>
            
            <Style TargetType="ImageButton">
                <Setter Property="Command" Value="{Binding GetPictureCMD}"/>
                <Setter Property="WidthRequest" Value="90"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="Aspect" Value="AspectFill"/>
            </Style>
            <Style TargetType="Entry">
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Placeholder" Value="New Robot #"/>
            </Style>
            
            <Style TargetType="local:CustomEditor">
                <Setter Property="Placeholder" Value="Write comments here."/>
                <Setter Property="Grid.Row" Value="2"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="Grid.Column" Value="0"/>
                <Setter Property="Grid.ColumnSpan" Value="2"/>
            </Style>
            
            <Style TargetType="Picker">
                <!--<Setter Property="Grid.Row" Value="1"/>
                <Setter Property="Grid.Column" Value="1"/>-->
                <Setter Property="Title" Value="Existing Robot"/>
                <Setter Property="ItemsSource" Value="{Binding RobotNameAndIds}"/>
            </Style>

            <Style x:Key="ClearExistingRobot" TargetType="Button" BasedOn="{StaticResource HighLightButton}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HeightRequest" Value="30"/>
                <Setter Property="WidthRequest" Value="58"/>
                <Setter Property="Text" Value="Clear"/>
                <Setter Property="Command" Value="{Binding ClearPickerCMD}"/>
            </Style>

            <Style x:Key="PickerAndClearBtnStackLayout" TargetType="StackLayout">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Grid.Row" Value="1"/>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>
    
        <StackLayout>
            <Label Text="Robots" Style="{StaticResource CategoryHeader}" Margin="0,30,0,0"/>
            <BoxView Style="{StaticResource HorizontalLineBreak}"/>

            <StackLayout Orientation="Horizontal">
                <Button Text="Remove" Style="{StaticResource CyanBtnStyle}" Command="{Binding HideRobotCMD}"/>
                <Button Text="Add" Style="{StaticResource CyanBtnStyle}" Command="{Binding RevealARobotCMD}"/>
            </StackLayout>

        <StackLayout x:Name="DataLayout">
            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <!-- CommandParamter is used to index which robot this imagebutton belongs to -->
                        <ImageButton Source="{Binding RobotOneImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="0"/>
                    </Frame>

                    <Entry Text="{Binding RobotOneId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotOneIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="0"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotOneInfo}"/>
                </Grid>
                
                <Frame.Triggers>
                    <!-- Commandparam is used to signal when this frame should be visible -->
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=1}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>
            
            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <!-- CommandParamter is used to index which robot this imagebutton belongs to -->
                        <ImageButton Source="{Binding RobotTwoImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="0"/>
                    </Frame>

                    <Entry Text="{Binding RobotTwoId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotTwoIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="1"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotTwoInfo}"/>
                </Grid>

                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=2}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>

            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <ImageButton Source="{Binding RobotThreeImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="2"/>
                    </Frame>

                    <Entry Text="{Binding RobotThreeId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotThreeIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="2"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotThreeInfo}"/>
                </Grid>

                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=3}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>

            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <ImageButton Source="{Binding RobotFourImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="3"/>
                    </Frame>

                    <Entry Text="{Binding RobotFourId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotFourIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="3"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotFourInfo}"/>
                </Grid>

                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=4}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>

            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <ImageButton Source="{Binding RobotTwoImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="4"/>
                    </Frame>

                    <Entry Text="{Binding RobotFiveId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotFiveIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="4"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotFiveInfo}"/>
                </Grid>

                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=5}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>

            <Frame Style="{StaticResource RobotFrame}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.5*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.9*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Frame Style="{StaticResource RobotImageFrame}">
                        <ImageButton Source="{Binding RobotSixImagePath, Converter={StaticResource ImagePathToImageSourceConverter}}" CommandParameter="5"/>
                    </Frame>

                    <Entry Text="{Binding RobotSixId}"/>
                    <StackLayout Style="{StaticResource PickerAndClearBtnStackLayout}">
                        <Picker x:Name="RobotSixIdPicker" x:FieldModifier="public" SelectedItem="{Binding RobotOneSelected}"/>
                        <Button Style="{StaticResource ClearExistingRobot}" CommandParameter="5"/>
                    </StackLayout>
                    <local:CustomEditor Text="{Binding RobotSixInfo}"/>
                </Grid>

                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding DisplayRobotFrameAmount, Converter={StaticResource DetermineFrameVisibility}, ConverterParameter=6}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                </Frame.Triggers>
            </Frame>

        </StackLayout>
            
        </StackLayout>
</ContentView>